import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { AnalysisResult } from '@/app/page';

export async function exportToPDF(result: AnalysisResult): Promise<void> {
  try {
    // Create a temporary container for the PDF content
    const container = document.createElement('div');
    container.style.position = 'absolute';
    container.style.left = '-9999px';
    container.style.top = '0';
    container.style.width = '800px';
    container.style.backgroundColor = 'white';
    container.style.padding = '40px';
    container.style.fontFamily = 'Arial, sans-serif';
    
    // Generate the HTML content for the PDF
    container.innerHTML = generatePDFContent(result);
    
    // Add to DOM temporarily
    document.body.appendChild(container);
    
    // Convert to canvas
    const canvas = await html2canvas(container, {
      scale: 2,
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff',
      width: 800,
      height: container.scrollHeight
    });
    
    // Remove temporary container
    document.body.removeChild(container);
    
    // Create PDF
    const pdf = new jsPDF('p', 'mm', 'a4');
    const imgWidth = 210; // A4 width in mm
    const pageHeight = 295; // A4 height in mm
    const imgHeight = (canvas.height * imgWidth) / canvas.width;
    let heightLeft = imgHeight;
    let position = 0;
    
    // Add first page
    pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 0, position, imgWidth, imgHeight);
    heightLeft -= pageHeight;
    
    // Add additional pages if needed
    while (heightLeft >= 0) {
      position = heightLeft - imgHeight;
      pdf.addPage();
      pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 0, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;
    }
    
    // Generate filename
    const timestamp = new Date().toISOString().split('T')[0];
    const sourceType = result.type.toUpperCase();
    const riskLevel = result.analysis.riskLevel.toUpperCase();
    const filename = `Terms_Analysis_${sourceType}_${riskLevel}_${timestamp}.pdf`;
    
    // Save the PDF
    pdf.save(filename);
    
  } catch (error) {
    console.error('PDF export failed:', error);
    throw new Error('Failed to export PDF. Please try again.');
  }
}

function generatePDFContent(result: AnalysisResult): string {
  const timestamp = result.timestamp.toLocaleDateString() + ' at ' + result.timestamp.toLocaleTimeString();
  
  return `
    <div style="max-width: 800px; margin: 0 auto; font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <!-- Header -->
      <div style="text-align: center; margin-bottom: 40px; border-bottom: 3px solid #2563eb; padding-bottom: 20px;">
        <h1 style="color: #2563eb; font-size: 28px; margin: 0 0 10px 0;">Terms of Service Analysis Report</h1>
        <p style="color: #666; font-size: 14px; margin: 0;">Generated by Terms Analyzer</p>
      </div>
      
      <!-- Document Info -->
      <div style="background: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 15px 0;">Document Information</h2>
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
          <div>
            <strong>Source:</strong> ${result.source}
          </div>
          <div>
            <strong>Type:</strong> ${result.type.toUpperCase()}
          </div>
          <div>
            <strong>Analysis Date:</strong> ${timestamp}
          </div>
          <div>
            <strong>Content Length:</strong> ${result.content.length.toLocaleString()} characters
          </div>
        </div>
      </div>
      
      <!-- Risk Overview -->
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 15px 0;">Risk Assessment Overview</h2>
        <div style="display: flex; align-items: center; gap: 20px; margin-bottom: 15px;">
          <div style="background: ${getRiskColor(result.analysis.riskLevel)}; color: white; padding: 8px 16px; border-radius: 20px; font-weight: bold;">
            ${result.analysis.riskLevel.toUpperCase()} RISK
          </div>
          <div style="font-size: 24px; font-weight: bold; color: ${getScoreColor(result.analysis.score)};">
            ${result.analysis.score}/100
          </div>
        </div>
        <div style="background: #e5e7eb; height: 20px; border-radius: 10px; overflow: hidden;">
          <div style="background: ${getScoreColor(result.analysis.score)}; height: 100%; width: ${result.analysis.score}%; border-radius: 10px;"></div>
        </div>
      </div>
      
      <!-- Executive Summary -->
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 15px 0;">Executive Summary</h2>
        <p style="background: #f1f5f9; padding: 20px; border-radius: 8px; margin: 0; border-left: 4px solid #2563eb;">
          ${result.analysis.summary}
        </p>
      </div>
      
      <!-- Key Concerns -->
      ${result.analysis.concerns.length > 0 ? `
      <div style="margin-bottom: 30px;">
        <h2 style="color: #dc2626; font-size: 20px; margin: 0 0 15px 0;">‚ö†Ô∏è Key Concerns (${result.analysis.concerns.length})</h2>
        <div style="space-y: 10px;">
          ${result.analysis.concerns.map(concern => `
            <div style="background: #fef2f2; border: 1px solid #fecaca; padding: 15px; border-radius: 8px; margin-bottom: 10px;">
              <div style="display: flex; align-items: flex-start; gap: 10px;">
                <div style="width: 8px; height: 8px; background: #dc2626; border-radius: 50%; margin-top: 8px; flex-shrink: 0;"></div>
                <p style="margin: 0; color: #7f1d1d;">${concern}</p>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
      ` : ''}
      
      <!-- Positive Highlights -->
      ${result.analysis.highlights.length > 0 ? `
      <div style="margin-bottom: 30px;">
        <h2 style="color: #059669; font-size: 20px; margin: 0 0 15px 0;">‚úÖ Positive Aspects (${result.analysis.highlights.length})</h2>
        <div style="space-y: 10px;">
          ${result.analysis.highlights.map(highlight => `
            <div style="background: #f0fdf4; border: 1px solid #bbf7d0; padding: 15px; border-radius: 8px; margin-bottom: 10px;">
              <div style="display: flex; align-items: flex-start; gap: 10px;">
                <div style="width: 8px; height: 8px; background: #059669; border-radius: 50%; margin-top: 8px; flex-shrink: 0;"></div>
                <p style="margin: 0; color: #064e3b;">${highlight}</p>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
      ` : ''}
      
      <!-- Category Analysis -->
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 20px 0;">Category Analysis</h2>
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
          ${Object.entries(result.analysis.categories).map(([key, category]) => `
            <div style="border: 2px solid #e5e7eb; border-radius: 8px; padding: 20px;">
              <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
                <h3 style="margin: 0; font-size: 16px; color: #374151;">${getCategoryName(key)}</h3>
                <span style="background: ${getRiskColor(category.riskLevel)}; color: white; padding: 4px 8px; border-radius: 12px; font-size: 12px; font-weight: bold;">
                  ${category.riskLevel.toUpperCase()}
                </span>
              </div>
              <div style="margin-bottom: 10px;">
                <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
                  <span style="font-size: 12px; color: #6b7280;">Risk Score</span>
                  <span style="font-size: 12px; font-weight: bold;">${category.score}/100</span>
                </div>
                <div style="background: #e5e7eb; height: 8px; border-radius: 4px; overflow: hidden;">
                  <div style="background: ${getScoreColor(category.score)}; height: 100%; width: ${category.score}%; border-radius: 4px;"></div>
                </div>
              </div>
              <p style="font-size: 12px; color: #6b7280; margin: 0 0 10px 0;">${category.explanation}</p>
              ${category.findings.length > 0 ? `
                <div>
                  <p style="font-size: 12px; font-weight: bold; margin: 0 0 5px 0;">Key Findings:</p>
                  ${category.findings.map(finding => `
                    <p style="font-size: 11px; color: #6b7280; margin: 0 0 3px 0; padding-left: 10px;">‚Ä¢ ${finding}</p>
                  `).join('')}
                </div>
              ` : ''}
            </div>
          `).join('')}
        </div>
      </div>
      
      <!-- Recommendations -->
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 15px 0;">üìã Recommendations</h2>
        <div style="background: #eff6ff; border: 1px solid #bfdbfe; padding: 20px; border-radius: 8px;">
          ${result.analysis.recommendations.map((recommendation, index) => `
            <div style="display: flex; align-items: flex-start; gap: 15px; margin-bottom: ${index === result.analysis.recommendations.length - 1 ? '0' : '15px'};">
              <div style="width: 24px; height: 24px; background: #2563eb; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 12px; font-weight: bold; flex-shrink: 0;">
                ${index + 1}
              </div>
              <p style="margin: 0; color: #1e40af;">${recommendation}</p>
            </div>
          `).join('')}
        </div>
      </div>
      
      <!-- Document Metrics -->
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1e40af; font-size: 20px; margin: 0 0 15px 0;">üìä Document Metrics</h2>
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
          <div style="background: #f8fafc; padding: 20px; border-radius: 8px;">
            <h3 style="margin: 0 0 10px 0; font-size: 16px; color: #374151;">Readability</h3>
            <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
              <span style="font-size: 14px;">Score</span>
              <span style="font-weight: bold;">${result.analysis.keyMetrics.readabilityScore}/100</span>
            </div>
            <div style="background: #e5e7eb; height: 8px; border-radius: 4px; overflow: hidden;">
              <div style="background: ${getReadabilityColor(result.analysis.keyMetrics.readabilityScore)}; height: 100%; width: ${result.analysis.keyMetrics.readabilityScore}%; border-radius: 4px;"></div>
            </div>
            <p style="font-size: 12px; color: #6b7280; margin: 5px 0 0 0;">
              ${result.analysis.keyMetrics.readabilityScore >= 70 ? 'Easy to read' : result.analysis.keyMetrics.readabilityScore >= 50 ? 'Moderately complex' : 'Difficult to read'}
            </p>
          </div>
          
          <div style="background: #f8fafc; padding: 20px; border-radius: 8px;">
            <h3 style="margin: 0 0 15px 0; font-size: 16px; color: #374151;">Document Details</h3>
            <div style="space-y: 10px;">
              <div style="display: flex; justify-content: space-between; margin-bottom: 8px;">
                <span style="font-size: 12px; color: #6b7280;">Length</span>
                <span style="font-size: 12px; font-weight: bold;">${result.analysis.keyMetrics.lengthAnalysis}</span>
              </div>
              ${result.analysis.keyMetrics.lastUpdated ? `
                <div style="display: flex; justify-content: space-between; margin-bottom: 8px;">
                  <span style="font-size: 12px; color: #6b7280;">Last Updated</span>
                  <span style="font-size: 12px; font-weight: bold;">${result.analysis.keyMetrics.lastUpdated}</span>
                </div>
              ` : ''}
              ${result.analysis.keyMetrics.jurisdiction ? `
                <div style="display: flex; justify-content: space-between;">
                  <span style="font-size: 12px; color: #6b7280;">Jurisdiction</span>
                  <span style="font-size: 12px; font-weight: bold;">${result.analysis.keyMetrics.jurisdiction}</span>
                </div>
              ` : ''}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Footer -->
      <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 2px solid #e5e7eb; color: #6b7280; font-size: 12px;">
        <p style="margin: 0;">This report was generated by Terms Analyzer on ${timestamp}</p>
        <p style="margin: 5px 0 0 0;">For more information, visit our website or contact support</p>
      </div>
    </div>
  `;
}

function getRiskColor(riskLevel: string): string {
  switch (riskLevel) {
    case 'low': return '#059669';
    case 'medium': return '#d97706';
    case 'high': return '#dc2626';
    default: return '#6b7280';
  }
}

function getScoreColor(score: number): string {
  if (score <= 30) return '#059669';
  if (score <= 60) return '#d97706';
  return '#dc2626';
}

function getReadabilityColor(score: number): string {
  if (score >= 70) return '#059669';
  if (score >= 50) return '#d97706';
  return '#dc2626';
}

function getCategoryName(category: string): string {
  const names = {
    dataPrivacy: 'Data Privacy',
    userRights: 'User Rights',
    liability: 'Liability',
    termination: 'Termination',
    contentOwnership: 'Content Ownership',
    disputeResolution: 'Dispute Resolution'
  };
  return names[category as keyof typeof names] || category;
}